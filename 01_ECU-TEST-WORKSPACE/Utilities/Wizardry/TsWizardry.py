# -*- coding: ISO-8859-1 -*-

import constants

from tts.testExecution.api.UserUtility import TsAXSUtility
from tts.core.axs.interface.Interface import Interface
from tts.core.axs.interface.constraint.NumericType import NumericType
from tts.core.axs.interface.constraint.TextType import TextType

class TsWizardry(TsAXSUtility):
    """
    AXSUtility class template generated by tracetronic UtilityWizard.
    """
    ID = '09336f9c-96cc-11ef-8c56-38d54714d0ed'
    NAME = _(u'Wizardry')
    DESCRIPTION = _(u'check')

    @staticmethod
    def GetBitmap():
        """
         Return the utility-icon.
         Please don't edit.
        """
        import res
        return res.GetBitmap("utility", "general")

    @classmethod
    def GetInterface(cls):
        """
        Return an interface which specifies your input and output values.
        """
        interface = Interface()
        #Specify your Interface here

        #argument a (Value, Numeric)
        #constraint = NumericType(u"a")
        #constraint.SetDefaultValue(5)
        #interface.AddArgument(constraint)

        #argument b (Value, Numeric)
        #constraint = NumericType(u"b")
        #constraint.SetUnitFromStr(u"km")
        #interface.AddArgument(constraint)

        #return c (Value, TextType)
        #constraint = TextType(u"c")
        #constraint.AddTextEntry("First")
        #constraint.AddTextEntry("Second")
        #constraint.AddTextEntry("Third")

        #interface.AddReturn(constraint)

        return interface

    def UtilityInit(self):
        """
        Overwrite for initialization of your utility.
        This methode is called, when creating an instance of this class.
        """
        pass


    def OnPreProcess(self, testEngine):
        """
        Overwrite to implement pre execution behavior.
        This methode is called before running the testcase.
        """
        pass

    def OnRun(self, userExcInst, testEngine):
        """
        Overwrite to implement execution behavior. This methode is called during the execution of the testcase.
        If there are calculations, that are not necessary to be calculated in
        this methode, put them in to the pre- or post process. That gives the
        real process more performance to do time-critical operations well.
        @type userExcInst: L{UserExecInst<application.modules.axs.realization.UserExecInst.UserExecInst>}
        @param userExcInst: Access to the arguments and return values.
        """
        #from tts.core.package.dataStructures.Value import Value as DSValue
        return constants.RESULT_ID_NONE

    def OnPostProcess(self, testEngine):
        """
        Overwrite to implement post execution behavior.
        This methode is called after the testcase is completed.
        """
        pass

    def GetReportInfos(self):
        """
        Overwrite to add custom information in the test report.
        @return: Dictionary containing key value pairs to be shown in the report
        @rtype: {str:str}
        """
        # return {"info1": "value1",
        #         "info2": "value2",
        #         "info3": "value3"}

